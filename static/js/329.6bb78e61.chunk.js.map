{"version":3,"file":"static/js/329.6bb78e61.chunk.js","mappings":"4NAqDA,MA1CA,SAAcA,GAGV,IAAIC,EAAaD,EAAME,MAAMC,QAAO,SAACC,GACjC,OAAOA,EAAKC,MAAMC,QAAUN,EAAMO,KACtC,IAGA,OACAC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kCAAiCC,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,WAAW,cAAa,aAAaZ,EAAMa,GAAKC,QAAS,kBAAId,EAAMe,YAAYf,EAAMO,MAAM,EAAEE,UAAU,6EACnHE,EAAAA,EAAAA,KAAA,OAAMF,UAAU,4EAA2EC,SAElFV,EAAMO,SAGfI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4FAA2FC,UACtGC,EAAAA,EAAAA,KAAA,OAAKK,MAAM,6BAA6BP,UAAU,UAAUQ,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAcT,UAC7GC,EAAAA,EAAAA,KAAA,QAAMS,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,yBAG7EZ,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gGAA+FC,UAC1GC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2DAA0DC,SAErEV,EAAME,MAAMsB,OAAO,GAAKvB,EAAWuB,OAAO,GAC1CxB,EAAME,MAAMuB,KAAI,SAACC,GACb,OACIlB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAAA,UAAAD,SAASgB,EAAIC,UACjBhB,EAAAA,EAAAA,KAAA,KAAAD,SAAsB,OAAlBgB,EAAIE,YAAmB,IAAIF,EAAIE,gBAG/C,UAQhB,ECpCe,SAASC,IAEpB,IAAMC,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAS,OAAGA,EAAMC,OAAOH,KAAK,IACvDI,GAAYH,EAAAA,EAAAA,KAAY,SAACC,GAAS,OAAGA,EAAMC,OAAOC,KAAK,IACvDC,GAAiBJ,EAAAA,EAAAA,KAAY,SAACC,GAAS,OAAGA,EAAMC,OAAOE,UAAU,IACjEC,GAAWC,EAAAA,EAAAA,MAGXC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOR,GAAiB,IAAAD,EAAA,OAAAO,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAClBC,EAAAA,EAAAA,WAAyBb,GAAY,KAAD,EAAlDD,EAAKW,EAAAI,KACXb,GAASc,EAAAA,EAAAA,IAAQhB,IAAQ,wBAAAW,EAAAM,OAAA,GAAAR,EAAA,KAChC,gBAHkBS,GAAA,OAAAb,EAAAc,MAAA,KAAAC,UAAA,KAcnB,OACI3C,EAAAA,EAAAA,KAAA,OAAKE,GAAG,SAAQH,SACXoB,EAAMN,OAAO,IACVhB,EAAAA,EAAAA,MAAA+C,EAAAA,SAAA,CAAA7C,SAAA,EAEIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6CAA4CC,SAAA,CAAC,sBAAoByB,EAAW,OAGvFL,EAAML,KAAI,SAAC+B,GACP,OACI7C,EAAAA,EAAAA,KAAA,OAAmBF,UAAU,mBAAkBC,UAE3CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UACrCC,EAAAA,EAAAA,KAAC8C,EAAI,CAAClD,MAAOiD,EAAKlD,MAAOO,GAAI2C,EAAK3C,GAAI6C,QAAQ,IAAIxD,MAAOgC,EAAOnB,YAAauB,EAAe7B,UAAU,cAHpG+C,EAAK3C,GAQvB,QAQxB,C","sources":["components/Item/index.tsx","components/Result/index.tsx"],"sourcesContent":["import React from \"react\";\n\n\n /** *****************************************************************\n  | Author            : @deniprobow\n  | Name              : user's repos list\n  | Updater           : @deniprobow\n  | last_change       : 2023-04-05\n  | Description_update: -\n  | Description       : Component function for list of user's repo that expand and fetching data from github's api when clicked by user\n  *******************************************************************/\nfunction Item(props:any) {\n\n    //check if props.item contain current activer that search for repo\n    let checkOwner = props.items.filter((item:any)=>{\n        return item.owner.login === props.title\n    })\n\n    \n    return(\n    <div className=\"relative overflow-hidden w-full\">\n        <input type=\"checkbox\" data-testid={\"itemDetail\"+props.id}  onClick={()=>props.handleClick(props.title)} className=\"peer absolute top-0 inset-x-0 w-full h-12 opacity-0 z-10 cursor-pointer\" />\n        <div  className=\" text-left text-black-500 bg-slate-200 h-12 w-full pl-5 flex items-center\">\n            \n                {props.title}\n            \n        </div>\n        <div className=\"absolute top-3 right-3 transition-transform duration-500 rotate-0 peer-checked:-rotate-90\" >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n            </svg>\n        </div>\n        <div className=\"overflow-hidden bg-slate-500 transition-all duration-500 max-h-0 max-h peer-checked:max-h-fit\">\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-2 m-2\">\n            {\n                props.items.length>0 && checkOwner.length>0  &&\n                props.items.map((row:any) => {\n                    return(\n                        <div className=\"block bg-slate-300 p-3 text-left\">\n                            <h5><strong>{row.name}</strong></h5>\n                            <p>{row.description===null?\"-\":row.description}</p>\n                         </div>\n                    )\n                })\n                \n            }\n            </div>\n            \n        </div>\n    </div>\n    )\n};\n\nexport default Item;","import React, { Suspense } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Spinner } from \"reactstrap\";\nimport githubService from \"../../services/githubService\";\nimport { setRepo, setUser } from \"../../store/githubSlices\";\nimport Item from \"../Item\";\n\n/** *****************************************************************\n  | Author            : @deniprobow\n  | Name              : Component Result\n  | Updater           : @deniprobow\n  | last_change       : 2023-04-05\n  | Description_update: -\n  | Description       : component function for displaying data result from searchUser api service\n  *******************************************************************/\nexport default function Result(){\n\n    const users:any = useSelector((state:any)=>state.github.users); //get users from redux\n    const repos:any = useSelector((state:any)=>state.github.repos); //get repos from redux\n    const userSearch:any = useSelector((state:any)=>state.github.userSearch); //get user's search string from redux\n    const dispatch = useDispatch();\n\n    //search user's repo on click expand\n    const searcUserRepo = async (userSearch:string)=>{\n            const repos = await githubService.searchRepo(userSearch);\n            dispatch(setRepo(repos));\n    }\n    \n\n    //spinner\n    const Spinner = () =>{\n        return(\n        <svg className=\"animate-spin h-5 w-5 mr-3 ...\" viewBox=\"0 0 24 24\">&nbsp;\n        </svg>\n        )\n    }\n    \n    return(\n        <div id='result'>\n            {users.length>0&&\n                <>\n                {/* <Suspense fallback={<Spinner />} > */}\n                    <div className=\"block w-full text-slate-500 py-4 text-left\">Showing users for \"{userSearch}\"</div>\n                    \n                    {\n                        users.map((user:any)=>{\n                            return(\n                                <div key={user.id} className=\"py-2  clear-both\">\n                                    \n                                    <div className=\"w-full flex items-center\">\n                                        <Item title={user.login} id={user.id} content=\"-\" items={repos} handleClick={searcUserRepo} className=\"w-full\" />\n                                    </div>\n                                    \n                                </div>\n                            )\n                        })\n                    }\n                {/* </Suspense> */}\n                    \n                </>\n            }\n        </div>\n    )\n}"],"names":["props","checkOwner","items","filter","item","owner","login","title","_jsxs","className","children","_jsx","type","id","onClick","handleClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","length","map","row","name","description","Result","users","useSelector","state","github","repos","userSearch","dispatch","useDispatch","searcUserRepo","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","githubService","sent","setRepo","stop","_x","apply","arguments","_Fragment","user","Item","content"],"sourceRoot":""}